---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: {{ .Values.application.name }}
  name: {{ .Values.application.name }}
  namespace: {{ .Values.application.environments.development }}
spec:
  replicas: 3
  selector:
    app: {{ .Values.application.name }}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: {{ .Values.application.name }}
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/{{ .Values.application.environments.development }}/{{ .Values.application.name }}:latest
        imagePullPolicy: Always
        name: {{ .Values.application.name }}
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: {{ .Values.application.name }}
  name: {{ .Values.application.name }}
  namespace: {{ .Values.application.environments.production }}
spec:
  replicas: 1
  selector:
    app: {{ .Values.application.name }}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: {{ .Values.application.name }}
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/{{ .Values.application.environments.production }}/{{ .Values.application.name }}:latest
        imagePullPolicy: Always
        name: {{ .Values.application.name }}
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange